#!/bin/sh
#
# git-svn-diff originally by (http://mojodna.net/2009/02/24/my-work-git-workflow.html)
# modified by mike@mikepearce.net
# modified by aconway@[redacted] - handle diffs that introduce new files
#
# Generate an SVN-compatible diff against the tip of the tracking branch

# Get the tracking branch (if we're on a branch)
TRACKING_BRANCH=`git svn info | grep URL | sed -e 's/.*\/branches\///'`

# If the tracking branch has 'URL' at the beginning, then the sed wasn't successful and
# we'll fall back to the svn-remote config option
case "$TRACKING_BRANCH" in
    URL*)
	TRACKING_BRANCH=`git config --get svn-remote.svn.fetch | sed -e 's/.*:refs\/remotes\///'`
	;;
esac

# Get the highest revision number
REV=`git svn info | grep 'Last Changed Rev:' | sed -E 's/^.*: ([[:digit:]]*)/\1/'`

# Then do the diff from the highest revision on the current branch and masssage
# into SVN format
git diff --no-prefix \
    "`git rev-list --date-order --max-count=1 $TRACKING_BRANCH`" \
    "$@" | \
sed -e "
    /^diff --git \(.*\) \1\s*$/ {
	N
	/\nold mode/ N
	/\n\(deleted\|new\)\( file\)\? mode/ N
	N
	/\nBinary files .* differ\s*$/ d
	N
	/^diff --git .*\nindex .*\n--- [^\n]*\n+++ [^\n]*$/ {
	    s|^diff --git \(.*\) \1\s*\n|Index: \1\n|
	    s|\nindex [^\n]*\n|\n===================================================================\n|
	    s|\(\n--- \(.*\S\)\)\s*\(\n+++ \2\)\s*$|\1\t(revision $REV)\3\t(working copy)|
	    s|\(\n--- \)/dev/null\s*\(\n+++ \(.*\S\)\)\s*$|\1\3\t(revision 0)\2\t(revision 0)|
	    s|\(\n--- \(.*\S\)\)\s*\(\n+++ \)/dev/null\s*$|\1\t(revision $REV)\3\2\t(working copy)|
	}
    }"
